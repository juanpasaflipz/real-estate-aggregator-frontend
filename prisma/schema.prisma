generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model properties {
  id                Int                 @id @default(autoincrement())
  external_id       String              @unique(map: "properties_external_id_unique") @db.VarChar(255)
  title             String              @db.VarChar(500)
  price             Decimal?            @db.Decimal(12, 2)
  currency          String?             @default("MXN") @db.VarChar(10)
  location          String?             @db.VarChar(500)
  city              String?             @db.VarChar(255)
  state             String?             @db.VarChar(255)
  bedrooms          Int?
  bathrooms         Int?
  size              Decimal?            @db.Decimal(10, 2)
  property_type     String?             @db.VarChar(100)
  link              String?
  description       String?
  source            String?             @db.VarChar(50)
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  last_seen_at      DateTime?           @default(now()) @db.Timestamptz(6)
  property_features property_features[]
  property_images   property_images[]

  @@index([bedrooms], map: "properties_bedrooms_index")
  @@index([city], map: "properties_city_index")
  @@index([external_id], map: "properties_external_id_index")
  @@index([last_seen_at], map: "properties_last_seen_at_index")
  @@index([price], map: "properties_price_index")
  @@index([source], map: "properties_source_index")
}

model property_features {
  id          Int         @id @default(autoincrement())
  property_id Int?
  feature     String?
  created_at  DateTime?   @default(now()) @db.Timestamptz(6)
  properties  properties? @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "property_features_property_id_foreign")

  @@index([property_id], map: "property_features_property_id_index")
}

model property_images {
  id          Int         @id @default(autoincrement())
  property_id Int?
  image_url   String?
  is_primary  Boolean?    @default(false)
  created_at  DateTime?   @default(now()) @db.Timestamptz(6)
  properties  properties? @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "property_images_property_id_foreign")

  @@index([property_id], map: "property_images_property_id_index")
}

model search_history {
  id            Int       @id @default(autoincrement())
  search_params Json?
  result_count  Int?
  sources       String[]
  created_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "search_history_created_at_index")
}
